# This is a basic workflow to help you get started with Actions

name: test-workflow

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      solution-names:
        description: "Solution Name(s)"
        type: string
        required: true
        default: 'contoso_university_core, ContosoUniversityExtended'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      solution-names: ${{ steps.solution-matrix.outputs.value }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set Solution Names Matrix
        id: solution-matrix
        run: | 
          if ('${{inputs.solution-names}}' -match ','){
            $solutionList = @()
            '${{inputs.solution-names}}' -split ',' | foreach { 
              $solutionList += $_.Trim()
              write-host $_.Trim()
            }
            $solutionNames = ($solutionList | Convertto-Json -compress).toString()
          }
          else {
            $solutionNames = ('${{inputs.solution-names}}' | Convertto-Json -compress).toString()
          }
          write-host $solutionNames
          echo "solution-names=$solutionNames" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append;
          write-output "value=$solutionNames" >> $Env:GITHUB_OUTPUT
        shell: pwsh 
      - name: Output Solution Names
        run: echo ${{ steps.solution-matrix.outputs.value }}
      - name: Checkout new Branch 
        uses: actions/checkout@v4
        with:
           ref: main
           path: PowerPlatformALM
      - name: Checkout Template Branch 
        uses: actions/checkout@v4
        with:
          repository: Contoso-W-Enterprise/PowerPlatformALM
          ref: V1
          path: ALMTemplate
          github-server-url: 'https://github.com'
          lfs: true
          persist-credentials: true
      - name: Debug list of files
        run: |
          Get-ChildItem -path '.' -Recurse | foreach { write-host $_.FullName }
        shell: pwsh
  deploy:
    needs: build
    strategy:
      matrix:
        solution-name: ${{ fromJSON( needs.build.outputs.solution-names) }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false 
    steps:
      - name: output matrix
        run: echo ${{ matrix.solution-name}}
      